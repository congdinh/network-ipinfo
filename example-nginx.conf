server {
  listen 80;
  server_name network-ipinfo.yourdomain.com;
  rewrite ^(.*) https://network-ipinfo.yourdomain.com$1 permanent;
}

server {
  listen 443 ssl http2;
  server_name network-ipinfo.yourdomain.com;
  ssl_certificate /etc/letsencrypt/live/network-ipinfo.yourdomain.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/network-ipinfo.yourdomain.com/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  # Improve HTTPS performance with session resumption
  # ssl_session_cache shared:SSL:50m;
  # ssl_session_timeout 1d;

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }

  location / {
    proxy_pass http://127.0.0.1:9099/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # required for network-ipinfo-check-realip
    proxy_set_header X-Forwarded-Proto $scheme;

    # Add CORS headers for allowed origins
    set $cors "";
    if ($http_origin ~* (https?://(?:.*\.)?yourdomain-2\.org|https?://(?:.*\.)?yourdomain\.com|https?://localhost:3245|https?://localhost:3000)) {
      set $cors "true";
    }
    if ($cors = "true") {
      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
    }

    # Handle CORS preflight requests
    if ($request_method = OPTIONS) {
      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
      add_header 'Access-Control-Max-Age' 86400;
      return 204;
    }
  }
  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }
}
